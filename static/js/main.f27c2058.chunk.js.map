{"version":3,"sources":["constants/strings.js","constants/scale.js","constants/headstyle.js","constants/modes.js","constants/events.js","components/Renderer.js","components/Viewport.js","components/Price.js","components/Tile.js","components/Menu.js","views/HomeView.js","components/Info.js","views/OptionView.js","views/PaymentView.js","views/ConfirmationView.js","Configurator.js","registerServiceWorker.js","index.js"],"names":["strings","scale","headstyle","modes","HOME","OPTION","PAYMENT","CONFIRMATION","events","Three","require","OBJLoader","Renderer","data","Object","classCallCheck","this","TEXTURE_ANISOTROPY","animate","bind","resize","renderer","WebGLRenderer","container","undefined","textureLoader","TextureLoader","textures","diffuse","loadTexture","normal","roughness","specular","diffuseMaterial","MeshPhongMaterial","map","handleEvent","colorChange","colors","orange","MeshPhysicalMaterial","color","metalness","name","red","purple","white","models","domElement","setSize","clientWidth","clientHeight","scene","Scene","camera","PerspectiveCamera","position","set","controls","OrbitControls","rotateSpeed","zoomSpeed","maxDistance","minDistance","panSpeed","noZoom","noPan","ambient","AmbientLight","add","spotLight","DirectionalLight","lookAt","loadModel","fbx","traverse","child","isMesh","castShadow","receiveShadow","x","y","rotation","Math","PI","console","log","_this","abasi","window","addEventListener","path","cb","FBXLoader","load","texture","anisotropy","capabilities","getMaxAnisotropy","wrapS","ClampToEdgeWrapping","wrapT","minFilter","LinearMipMapLinearFilter","magFilter","aspect","updateProjectionMatrix","model","_this2","remove","currentModel","node","material","currentTexture","requestAnimationFrame","update","renderScene","render","paused","event","Events","finish","colorMat","emissive","Viewport","React","Component","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","assertThisInitialized","changeMode","rotate","switchModels","setData","mode","element","containerRef","appendChild","viewData","assign","showBackButton","itemIndex","items","react_default","a","createElement","className","id","onClick","goBack","Tile","handleClick","callback","label","title","icon","iconSource","concat","role","src","variants","price","Menu","chooseColor","tile","key","tiles","_","products","item","i","imageSource","handle","getTextureImage","Tile_Tile","columns","style","backgroundColor","defaultProps","HomeView","Menu_Menu","getItems","Viewport_Viewport","reset","Info","state","something","OptionView","Info_Info","PaymentView","ConfirmationView","Configurator","_this$components","getInitialData","NewOptions","Modes","propogateEvent","components","defineProperty","rendererContainer","document","getElementById","createScene","getRendererElement","collectionId","collections","push","propogateItems","Error","dataCopy","setState","updateCart","pop","Strings","Scale","Headstyle","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","Configurator_Configurator","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f27c2058.chunk.js","sourcesContent":["export default {\r\n  SIX: 6,\r\n  SEVEN: 7,\r\n  EIGHT: 8,\r\n};\r\n","export default {\r\n  STANDARD: 'Standard',\r\n  MULTISCALE: 'Multiscale',\r\n};\r\n","export default {\r\n  HEADSTOCK: 'Headstock',\r\n  HEADLESS: 'Headless',\r\n};\r\n","export default {\r\n  HOME: 'Home',\r\n  OPTION: 'Option',\r\n  PAYMENT: 'Payment',\r\n  CONFIRMATION: 'Confirmation',\r\n};\r\n","export default {\n  COLOR: 'Color',\n};\n","import ColladaLoader from 'three-collada-loader';\r\nimport FBXLoader from 'three-fbxloader-offical';\r\nimport OBJLoader from 'three-obj-loader';\r\nimport OrbitControls from 'three-orbitcontrols';\r\nimport Events from '../constants/events';\r\n\r\nconst Three = require('three');\r\n\r\nOBJLoader(Three);\r\n\r\nexport default class Renderer {\r\n  constructor(data) {\r\n    this.TEXTURE_ANISOTROPY = 16;\r\n\r\n    this.data = data;\r\n\r\n    // Event bindings\r\n    this.animate = this.animate.bind(this);\r\n    this.resize = this.resize.bind(this);\r\n\r\n    // Need to set container on instance\r\n    this.renderer = new Three.WebGLRenderer();\r\n    this.container = undefined;\r\n    this.textureLoader = new Three.TextureLoader();\r\n\r\n    this.textures = {\r\n      diffuse: this.loadTexture('new/guitar/original/textures/Default_Diffuse.png'),\r\n      normal: this.loadTexture('new/guitar/original/textures/Default_Normal.png'),\r\n      roughness: this.loadTexture('new/guitar/original/textures/Default_Roughness.png'),\r\n      specular: this.loadTexture('new/guitar/original/textures/Default_Specular.png'),\r\n    };\r\n\r\n    this.diffuseMaterial = new Three.MeshPhongMaterial({ map: this.textures.diffuse });\r\n\r\n    // Event handlers\r\n    this.handleEvent = this.handleEvent.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n\r\n    // TODO: Create local model repository by key\r\n\r\n    // Local Colors\r\n    this.colors = {\r\n      orange: new Three.MeshPhysicalMaterial( { color: 0xf48942, metalness: 0.9, roughness: 0.2, name: 'orange' } ),\r\n      red: new Three.MeshPhysicalMaterial( { color: 0xe50b2f, metalness: 0.9, roughness: 0.2, name: 'red' } ),\r\n      purple: new Three.MeshPhysicalMaterial( { color: 0x8409b5, metalness: 0.9, roughness: 0.2, name: 'purple' } ),\r\n      white: new Three.MeshPhysicalMaterial( { color: 0xffffff, metalness: 0.9, roughness: 0.2, name: 'purple' } ),\r\n    };\r\n\r\n    this.models = {};\r\n  }\r\n\r\n  getRendererElement() {\r\n    return this.renderer.domElement;\r\n  }\r\n\r\n  update(data) {\r\n    // TODO: Update model based on selections?\r\n  }\r\n\r\n  async createScene() {\r\n    this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\r\n\r\n    this.scene = new Three.Scene();\r\n    this.camera = new Three.PerspectiveCamera(75, this.container.clientWidth / this.container.clientHeight, 0.1, 1000);\r\n    this.camera.position.set(0, 30, -50);\r\n\r\n    // Setup controls\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.rotateSpeed = 1.0;\r\n    this.controls.zoomSpeed = 1;\r\n    this.controls.maxDistance = 150;\r\n    this.controls.minDistance = 35;\r\n    this.controls.panSpeed = 0;\r\n    this.controls.noZoom = false;\r\n    this.controls.noPan = true;\r\n    \r\n    const ambient = new Three.AmbientLight( 0xffffff, 0.6 );\r\n    this.scene.add( ambient );\r\n\r\n    const spotLight = new Three.DirectionalLight( 0xffffff, 0.4 );\r\n    spotLight.position.set( 35, 15, -20 );\r\n    this.scene.add( spotLight );\r\n    this.spotLight = spotLight;\r\n    this.spotLight.lookAt(30, 15, 0);\r\n\r\n    this.loadModel('abasi/raw.fbx', fbx => {\r\n      fbx.traverse( function ( child ) {\r\n        if ( child.isMesh ) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n\r\n      fbx.position.x = 30;\r\n      fbx.position.y = 15;\r\n      fbx.rotation.x = - Math.PI / 2;\r\n\r\n      console.log(fbx.position);\r\n\r\n      this.scene.add(fbx);\r\n      this.models.abasi = fbx;\r\n    });\r\n  \r\n    window.addEventListener('resize', this.resize, false);\r\n\r\n    // Begin animation loop\r\n    this.animate();\r\n  }\r\n\r\n  loadModel(path, cb) {\r\n    console.log('Loading model...', path);\r\n    new FBXLoader().load(path, cb);\r\n  }\r\n\r\n  loadModelOBJ(path, cb) {\r\n    console.log('Loading OBJ model...', path);\r\n    new Three.OBJLoader().load(path, cb);\r\n  }\r\n\r\n  loadTexture(path) {\r\n    console.log('Loading texture...', path);\r\n\r\n    const texture = this.textureLoader.load(path);\r\n    texture.anisotropy = this.renderer.capabilities.getMaxAnisotropy();\r\n    texture.wrapS = Three.ClampToEdgeWrapping;\r\n    texture.wrapT = Three.ClampToEdgeWrapping;\r\n    texture.minFilter = Three.LinearMipMapLinearFilter;\r\n    texture.magFilter = Three.LinearMipMapLinearFilter;\r\n\r\n    return texture;\r\n  }\r\n\r\n  resize() {\r\n    this.camera.aspect = this.container.clientWidth / this.container.clientHeight;\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\r\n  }\r\n\r\n  /* eslint-disable no-param-reassign */\r\n  setModel(model) {\r\n    this.scene.remove(this.currentModel);\r\n\r\n    model.traverse((node) => {\r\n      if (node.isMesh) {\r\n        node.material.map = this.currentTexture;\r\n      }\r\n    });\r\n\r\n    this.currentModel = model;\r\n    this.scene.add(model);\r\n  }\r\n\r\n  animate() {\r\n    requestAnimationFrame(this.animate);\r\n    this.controls.update();\r\n    this.renderScene();\r\n  }\r\n\r\n  renderScene() {\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n\r\n  pause() {\r\n    this.paused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.paused = false;\r\n    this.animate();\r\n  }\r\n\r\n  handleEvent(event, data) {\r\n    switch (event) {\r\n      case Events.COLOR:\r\n        this.colorChange(data.finish);\r\n        break;\r\n      default:\r\n        console.log('Invalid event type', event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  colorChange(color) {\r\n    console.log('Color change!!!', color);\r\n\r\n    const colorMat = this.colors[color];\r\n\r\n    if (!colorMat) {\r\n      return console.log('Invalid color material specified!', color);\r\n    }\r\n\r\n    const fbx = this.models.abasi;\r\n    colorMat.emissive = colorMat.color;\r\n\r\n    fbx.traverse( function ( child ) {\r\n      if (child.material) {\r\n        child.material = colorMat;\r\n      }\r\n    });\r\n\r\n    // this.scene.background = new Three.Color(colorMat.color);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Price from './Price';\r\nimport Modes from '../constants/modes';\r\n\r\nexport default class Viewport extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.changeMode = this.changeMode.bind(this);\r\n    this.rotate = this.rotate.bind(this);\r\n    this.switchModels = this.switchModels.bind(this);\r\n    // this.purchase = this.purchase.bind(this);\r\n  }\r\n\r\n  handleChange(data) {\r\n    this.props.setData(data);\r\n  }\r\n\r\n  changeMode(mode) {\r\n    this.props.changeMode(mode);\r\n  }\r\n\r\n  rotate() {\r\n    console.log('rotated');\r\n  }\r\n\r\n  mountRenderer(element) {\r\n    this.containerRef.appendChild(element);\r\n  }\r\n\r\n  switchModels() {\r\n    console.log('Switching models!');\r\n  }\r\n\r\n  render() {\r\n    const viewData = Object.assign({}, this.props.data);\r\n    const showBackButton = this.props.itemIndex > 0;\r\n    delete viewData.items;\r\n\r\n    return (\r\n      <div className=\"container evenly viewport\">\r\n        <div id=\"renderer-container\" className=\"viewport-view\" />\r\n\r\n        {showBackButton &&\r\n          <div className=\"back-button\">\r\n            <button className=\"btn\" onClick={this.props.goBack}>\r\n                Back\r\n            </button>\r\n          </div>\r\n        }\r\n\r\n        {/* {this.props.reset && (\r\n          <div className=\"reset-button\">\r\n            <button className=\"btn\" onClick={this.props.reset}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        )} */}\r\n\r\n        {/* <div className=\"rotate-button\">\r\n          <button className=\"btn\" onClick={this.switchModels}>\r\n            Switch Models\r\n          </button>\r\n        </div> */}\r\n\r\n        {/* <div className=\"viewport-price\">\r\n          <Price data={this.props.data} changeMode={this.changeMode} />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nViewport.propTypes = {\r\n  reset: PropTypes.func.isRequired,\r\n  setData: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  goBack: PropTypes.func.isRequired,\r\n  itemIndex: PropTypes.number.isRequired,\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Price extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handlePrice = this.handlePrice.bind(this);\r\n  }\r\n\r\n  handlePrice() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container evenly price-container\">\r\n        <div>\r\n          <span className=\"price space-right\">${this.props.data.price}</span>\r\n\r\n          <i className=\"fa fa-question-circle price-icon tooltip\" role=\"presentation\" onClick={this.handlePrice}>\r\n            <span className=\"tooltiptext\">Click me for line item explanation of price</span>\r\n          </i>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPrice.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Tile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.callback(this.props.data);\r\n  }\r\n\r\n  render() {\r\n    const label = this.props.data.label || this.props.data.title;\r\n    const { icon } = this.props.data;\r\n\r\n    // Use fallback icon\r\n    const iconSource = icon ? `icons/${icon}.svg` : 'icons/headstock.svg';\r\n\r\n    return (\r\n      <div className=\"container columns evenly tile\" role=\"presentation\" onClick={this.handleClick}>\r\n        <div className=\"tile-label\">\r\n          {label}\r\n\r\n          <i src={iconSource} />\r\n        </div>\r\n\r\n        {this.props.data.variants &&\r\n          <div className=\"tile-price\">\r\n            ${this.props.data.variants[0].price} USD\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTile.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  callback: PropTypes.func.isRequired,\r\n  imageSource: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nimport Tile from './Tile';\r\n\r\nexport default class Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.changeMode = this.changeMode.bind(this);\r\n    this.chooseColor = this.chooseColor.bind(this);\r\n\r\n    this.colors = [{\r\n      name: 'orange',\r\n      color: 'orange',\r\n    }, {\r\n      name: 'red',\r\n      color: 'red',\r\n    }, {\r\n      name: 'purple',\r\n      color: 'purple',\r\n    }, {\r\n      name: 'white',\r\n      color: 'white',\r\n    }];\r\n  }\r\n\r\n  chooseColor(color) {\r\n    this.props.renderer.colorChange(color);\r\n  }\r\n\r\n  handleChange(tile) {\r\n    this.props.setData(tile, this.props.items.key);\r\n  }\r\n\r\n  changeMode(mode) {\r\n    this.props.changeMode(mode);\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.props;\r\n\r\n    const tiles = _.map(items.products || items, (item, i) => {\r\n      const imageSource = item.handle ? this.props.renderer.getTextureImage(item.handle) : undefined;\r\n      return (\r\n        <Tile key={i} data={item} callback={this.handleChange} imageSource={imageSource} />\r\n      );\r\n    });\r\n\r\n    const className = this.props.columns ? 'menu columns' : 'menu';\r\n\r\n    const colors = _.map(this.colors, (color) => {\r\n      const style = {\r\n        backgroundColor: color.color,\r\n      };\r\n\r\n      return (\r\n        <div className=\"color\" style={style} onClick={() => this.chooseColor(color.name)} />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"logo-container\">\r\n          <img src=\"logo.png\" className=\"abasi-logo\" />\r\n        </div>\r\n\r\n        <div className=\"tiles-container\">\r\n          {tiles}\r\n        </div>\r\n\r\n        <div className=\"color-container\">\r\n          {colors}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.defaultProps = {\r\n  columns: false,\r\n};\r\n\r\nMenu.propTypes = {\r\n  items: PropTypes.object.isRequired,\r\n  setData: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  columns: PropTypes.bool,\r\n  renderer: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ViewPort from '../components/Viewport';\r\nimport Menu from '../components/Menu';\r\n\r\nexport default class HomeView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.changeMode = this.changeMode.bind(this);\r\n  }\r\n\r\n  handleChange(data, key) {\r\n    this.props.setData(data, key);\r\n  }\r\n\r\n  changeMode(mode) {\r\n    this.props.changeMode(mode);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container home\">\r\n        <div className=\"container home-menu\">\r\n          <Menu\r\n            items={this.props.getItems()}\r\n            setData={this.handleChange}\r\n            changeMode={this.changeMode}\r\n            columns\r\n            renderer={this.props.renderer}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"container home-viewport\">\r\n          <ViewPort\r\n            data={this.props.data}\r\n            setData={this.handleChange}\r\n            changeMode={this.changeMode}\r\n            reset={this.props.reset}\r\n            itemIndex={this.props.itemIndex}\r\n            goBack={this.props.goBack}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHomeView.propTypes = {\r\n  reset: PropTypes.func.isRequired,\r\n  setData: PropTypes.func.isRequired,\r\n  getItems: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  itemIndex: PropTypes.number.isRequired,\r\n  goBack: PropTypes.func.isRequired,\r\n  renderer: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nexport default class Info extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      something: undefined,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return this.state.something || 'Info pane';\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ViewPort from '../components/Viewport';\r\nimport Menu from '../components/Menu';\r\nimport Info from '../components/Info';\r\n\r\nexport default class OptionView extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.changeMode = this.changeMode.bind(this);\r\n  }\r\n\r\n  handleChange(data, key) {\r\n    this.props.setData(data, key);\r\n  }\r\n\r\n  changeMode(mode) {\r\n    this.props.changeMode(mode);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"container option-menu\">\r\n          <div className=\"back-button\">\r\n            <button className=\"btn\" onClick={this.props.goBack}>\r\n              Back\r\n            </button>\r\n          </div>\r\n\r\n          <Menu\r\n            items={this.props.getItems()}\r\n            setData={this.handleChange}\r\n            changeMode={this.changeMode}\r\n            columns\r\n          />\r\n        </div>\r\n\r\n        <div className=\"container columns\">\r\n          <div className=\"container option-viewport\">\r\n            <ViewPort\r\n              data={this.props.data}\r\n              setData={this.handleChange}\r\n              changeMode={this.changeMode}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"container option-info\">\r\n            <Info\r\n              data={this.props.data}\r\n              setData={this.handleChange}\r\n              changeMode={this.changeMode}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOptionView.propTypes = {\r\n  setData: PropTypes.func.isRequired,\r\n  getItems: PropTypes.func.isRequired,\r\n  changeMode: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  goBack: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ViewPort from '../components/Viewport';\nimport Menu from '../components/Menu';\nimport Info from '../components/Info';\n\nexport default class PaymentView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n  }\n\n  handleChange(data, key) {\n    this.props.setData(data, key);\n  }\n\n  changeMode(mode) {\n    this.props.changeMode(mode);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container option-menu\">\n          <div className=\"back-button\">\n            <button className=\"btn\" onClick={this.props.goBack}>\n              Back\n            </button>\n          </div>\n\n          <Menu\n            items={this.props.getItems()}\n            setData={this.handleChange}\n            changeMode={this.changeMode}\n            columns\n          />\n        </div>\n\n        <div className=\"container columns\">\n          <div className=\"container option-viewport\">\n            <ViewPort\n              data={this.props.data}\n              setData={this.handleChange}\n              changeMode={this.changeMode}\n            />\n          </div>\n\n          <div className=\"container option-info\">\n            <Info\n              data={this.props.data}\n              setData={this.handleChange}\n              changeMode={this.changeMode}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPaymentView.propTypes = {\n  setData: PropTypes.func.isRequired,\n  getItems: PropTypes.func.isRequired,\n  changeMode: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  goBack: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ViewPort from '../components/Viewport';\nimport Menu from '../components/Menu';\nimport Info from '../components/Info';\n\nexport default class ConfirmationView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.changeMode = this.changeMode.bind(this);\n  }\n\n  handleChange(data, key) {\n    this.props.setData(data, key);\n  }\n\n  changeMode(mode) {\n    this.props.changeMode(mode);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"container option-menu\">\n          <div className=\"back-button\">\n            <button className=\"btn\" onClick={this.props.goBack}>\n              Back\n            </button>\n          </div>\n\n          <Menu\n            items={this.props.getItems()}\n            setData={this.handleChange}\n            changeMode={this.changeMode}\n            columns\n          />\n        </div>\n\n        <div className=\"container columns\">\n          <div className=\"container option-viewport\">\n            <ViewPort\n              data={this.props.data}\n              setData={this.handleChange}\n              changeMode={this.changeMode}\n            />\n          </div>\n\n          <div className=\"container option-info\">\n            <Info\n              data={this.props.data}\n              setData={this.handleChange}\n              changeMode={this.changeMode}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nConfirmationView.propTypes = {\n  setData: PropTypes.func.isRequired,\n  getItems: PropTypes.func.isRequired,\n  changeMode: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n  goBack: PropTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\n// Constants\r\nimport Strings from './constants/strings';\r\nimport Scale from './constants/scale';\r\nimport Headstyle from './constants/headstyle';\r\nimport Modes from './constants/modes';\r\nimport NewOptions from './constants/new-options.json';\r\n\r\n// WebGL Renderer\r\nimport Renderer from './components/Renderer';\r\n\r\n// Views\r\nimport HomeView from './views/HomeView';\r\nimport OptionView from './views/OptionView';\r\nimport PaymentView from './views/PaymentView';\r\nimport ConfirmationView from './views/ConfirmationView';\r\nimport './Configurator.css';\r\n\r\nexport default class Configurator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Initial State\r\n    this.state = {\r\n      data: Configurator.getInitialData(),\r\n      items: [NewOptions],\r\n      itemIndex: 0,\r\n      mode: Modes.HOME,\r\n    };\r\n\r\n    // Event bindings\r\n    this.setData = this.setData.bind(this);\r\n    this.getItems = this.getItems.bind(this);\r\n    this.changeMode = this.changeMode.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.goBack = this.goBack.bind(this);\r\n    this.propogateEvent = this.propogateEvent.bind(this);\r\n\r\n    // Setup components to use for different views\r\n    this.components = {\r\n      [Modes.HOME]: HomeView,\r\n      [Modes.OPTION]: OptionView,\r\n      [Modes.PAYMENT]: PaymentView,\r\n      [Modes.CONFIRMATION]: ConfirmationView,\r\n    };\r\n\r\n    this.renderer = new Renderer(this.state.data);\r\n  }\r\n\r\n  componentWillMount() {\r\n    // TODO: Do Stuff\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Startup/attach renderer\r\n    this.rendererContainer = document.getElementById('renderer-container');\r\n    this.renderer.container = this.rendererContainer;\r\n\r\n    // Initialize the scene if we haven't already done so\r\n    if (!this.renderer.scene) {\r\n      this.renderer.createScene();\r\n    }\r\n\r\n    this.rendererContainer.appendChild(this.renderer.getRendererElement());\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // Update/re-attach renderer\r\n    if (this.state.mode !== Modes.CONFIRMATION) {\r\n      this.rendererContainer = document.getElementById('renderer-container');\r\n      this.renderer.container = this.rendererContainer;\r\n      this.renderer.resize();\r\n      this.renderer.update(this.state.data);\r\n      this.rendererContainer.appendChild(this.renderer.getRendererElement());\r\n    }\r\n  }\r\n\r\n  static getInitialData() {\r\n    return {\r\n      strings: Strings.SIX,\r\n      scale: Scale.STANDARD,\r\n      headstyle: Headstyle.HEADSTOCK,\r\n      price: '0.00',\r\n    };\r\n  }\r\n\r\n  async setData(data, key) {\r\n    // If menu selection, set items and change mode\r\n    // Push items onto menu?\r\n    if (data.collectionId || data.collections) {\r\n      // this.state.mode = Modes.OPTION;\r\n      this.state.items.push(data.collections || data);\r\n      this.state.itemIndex += 1;\r\n      this.propogateItems();\r\n    } else {\r\n      // If product selection, deal with shopify\r\n      if (!key) {\r\n        throw new Error('No item key supplied!');\r\n      }\r\n\r\n      const dataCopy = { ...this.state.data };\r\n      dataCopy[key] = data.handle;\r\n      this.state.data = dataCopy;\r\n\r\n      this.setState({\r\n        data: dataCopy,\r\n      });\r\n\r\n      this.updateCart();\r\n    }\r\n  }\r\n\r\n  getItems() {\r\n    return this.state.items[this.state.itemIndex];\r\n  }\r\n\r\n  goBack() {\r\n    if (this.state.itemIndex > 0) {\r\n      const itemIndex = this.state.itemIndex - 1;\r\n      // const mode = itemIndex === 0 ? Modes.HOME : Modes.OPTION;\r\n\r\n      // Pop last menu set off\r\n      this.state.items.pop();\r\n\r\n      this.setState({\r\n        itemIndex,\r\n        // mode,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Reset guitar options\r\n  reset() {\r\n    // this.setState({\r\n    //   data: Configurator.getInitialData(),\r\n    // });\r\n  }\r\n\r\n  changeMode(mode) {\r\n    this.setState({\r\n      mode,\r\n    });\r\n  }\r\n\r\n  propogateEvent(event) {\r\n    // TODO: Event handler code for renderer events\r\n    this.renderer.handleEvent(event, this.state.data);\r\n  }\r\n\r\n  render() {\r\n    // TODO: Pre-rendered components?\r\n    const Component = this.components[this.state.mode];\r\n\r\n    if (!Component) {\r\n      throw new Error(`Component missing for mode ${this.state.mode}`);\r\n    }\r\n\r\n    return (\r\n      <div className=\"configurator\">\r\n        {this.getItems() &&\r\n          <Component\r\n            data={this.state.data}\r\n            setData={this.setData}\r\n            getItems={this.getItems}\r\n            changeMode={this.changeMode}\r\n            reset={this.reset}\r\n            itemIndex={this.state.itemIndex}\r\n            goBack={this.goBack}\r\n            renderer={this.renderer}\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,),);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',);\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.',);\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Configurator from './Configurator';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<Configurator />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}